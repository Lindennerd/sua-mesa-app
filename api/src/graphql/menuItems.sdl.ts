export const schema = gql`
  """
  Representation of MenuItem.
  """
  type MenuItem {
    "Description for id."
    id: Int!

    "Description for category."
    category: Category!

    "Description for categoryId."
    categoryId: Int!

    "Description for restaurant."
    restaurant: Restaurant!

    "Description for restaurantId."
    restaurantId: Int!

    "Description for createdAt."
    createdAt: DateTime!

    "Description for name."
    name: String!

    "Description for description."
    description: String!

    "Description for price."
    price: Float!

    "Description for OrderItem."
    OrderItem: [OrderItem]!
  }

  """
  About queries
  """
  type Query {
    "Fetch MenuItems."
    menuItems: [MenuItem!]! @requireAuth

    "Fetch a MenuItem by id."
    menuItem(id: Int!): MenuItem @requireAuth
  }

  """
  Autogenerated input type of InputMenuItem.
  """
  input CreateMenuItemInput {
    "Description for categoryId."
    categoryId: Int!

    "Description for restaurantId."
    restaurantId: Int!

    "Description for name."
    name: String!

    "Description for description."
    description: String!

    "Description for price."
    price: Float!
  }

  """
  Autogenerated input type of UpdateMenuItem.
  """
  input UpdateMenuItemInput {
    "Description for categoryId."
    categoryId: Int

    "Description for restaurantId."
    restaurantId: Int

    "Description for name."
    name: String

    "Description for description."
    description: String

    "Description for price."
    price: Float
  }

  """
  About mutations
  """
  type Mutation {
    "Creates a new MenuItem."
    createMenuItem(input: CreateMenuItemInput!): MenuItem! @requireAuth

    "Updates an existing MenuItem."
    updateMenuItem(id: Int!, input: UpdateMenuItemInput!): MenuItem!
      @requireAuth

    "Deletes an existing MenuItem."
    deleteMenuItem(id: Int!): MenuItem! @requireAuth
  }
`
