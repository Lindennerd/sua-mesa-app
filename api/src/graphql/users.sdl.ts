export const schema = gql`
  """
  Representation of User.
  """
  type User {
    "Description for id."
    id: Int!

    "Description for email."
    email: String!

    "Description for name."
    name: String!

    "Description for hashedPassword."
    hashedPassword: String!

    "Description for salt."
    salt: String!

    "Description for resetToken."
    resetToken: String

    "Description for resetTokenExpiresAt."
    resetTokenExpiresAt: DateTime

    "Description for createdAt."
    createdAt: DateTime!

    "Description for RestaurantUser."
    RestaurantUser: [RestaurantUser]!

    "Description for Order."
    Order: [Order]!

    "Description for OrderDelivery."
    OrderDelivery: [OrderDelivery]!
  }

  """
  About queries
  """
  type Query {
    "Fetch Users."
    users: [User!]! @requireAuth

    "Fetch a User by id."
    user(id: Int!): User @requireAuth
  }

  """
  Autogenerated input type of InputUser.
  """
  input CreateUserInput {
    "Description for email."
    email: String!

    "Description for name."
    name: String!

    "Description for hashedPassword."
    hashedPassword: String!

    "Description for salt."
    salt: String!

    "Description for resetToken."
    resetToken: String

    "Description for resetTokenExpiresAt."
    resetTokenExpiresAt: DateTime
  }

  """
  Autogenerated input type of UpdateUser.
  """
  input UpdateUserInput {
    "Description for email."
    email: String

    "Description for name."
    name: String

    "Description for hashedPassword."
    hashedPassword: String

    "Description for salt."
    salt: String

    "Description for resetToken."
    resetToken: String

    "Description for resetTokenExpiresAt."
    resetTokenExpiresAt: DateTime
  }

  """
  About mutations
  """
  type Mutation {
    "Creates a new User."
    createUser(input: CreateUserInput!): User! @requireAuth

    "Updates an existing User."
    updateUser(id: Int!, input: UpdateUserInput!): User! @requireAuth

    "Deletes an existing User."
    deleteUser(id: Int!): User! @requireAuth
  }
`
