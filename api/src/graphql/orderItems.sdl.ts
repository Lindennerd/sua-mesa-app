export const schema = gql`
  """
  Representation of OrderItem.
  """
  type OrderItem {
    "Description for id."
    id: Int!

    "Description for item."
    item: MenuItem!

    "Description for order."
    order: Order!

    "Description for menuItemId."
    menuItemId: Int!

    "Description for orderId."
    orderId: Int!

    "Description for status."
    status: OrderItemStatus!

    "Description for quantity"
    quantity: Int!
  }

  """
  Possible values for OrderItemStatus
  """
  enum OrderItemStatus {
    WAITING
    PREPARING
    DONE
    DELIVERED
  }

  """
  About queries
  """
  type Query {
    "Fetch OrderItems."
    orderItems: [OrderItem!]! @requireAuth

    "Fetch a OrderItem by id."
    orderItem(id: Int!): OrderItem @requireAuth
  }

  """
  Autogenerated input type of InputOrderItem.
  """
  input CreateOrderItemInput {
    "Description for menuItemId."
    menuItemId: Int!

    "Description for status."
    status: OrderItemStatus!

    "Description for quantity"
    quantity: Int!
  }

  """
  Autogenerated input type of UpdateOrderItem.
  """
  input UpdateOrderItemInput {
    "Description for menuItemId."
    menuItemId: Int

    "Description for orderId."
    orderId: Int

    "Description for status."
    status: OrderItemStatus
  }

  """
  About mutations
  """
  type Mutation {
    "Creates a new OrderItem."
    createOrderItem(input: CreateOrderItemInput!): OrderItem! @requireAuth

    "Updates an existing OrderItem."
    updateOrderItem(id: Int!, input: UpdateOrderItemInput!): OrderItem!
      @requireAuth

    "Deletes an existing OrderItem."
    deleteOrderItem(id: Int!): OrderItem! @requireAuth
  }
`
